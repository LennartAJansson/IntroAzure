# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '90f79f05-5e0b-4001-995e-b5b9174d2678'
  imageRepository: 'weatherforecast'
  containerRegistry: 'lennartacr.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/WeatherForecast/'
  tag: '$(Build.BuildId)'
  
  # Agent VM image name
  vmImageName: 'ubuntu-latest'

stages:
- stage: Build
  displayName: Build and push stage
  jobs:  
  - job: Build
    displayName: Build
    pool:
      vmImage: $(vmImageName)
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'test'
        projects: '**/*.UnitTests.csproj'
        arguments: '/p:CollectCoverage=true'
        testRunTitle: 'UnitTests - IntroAzure Build:$(Build.BuildId)'
    - task: Docker@2
      displayName: Build and push an image to container registry
      inputs:
        containerRegistry: '$(dockerRegistryServiceConnection)'
        repository: '$(imageRepository)'
        command: 'buildAndPush'
        Dockerfile: '$(dockerfilePath)Dockerfile'
        buildContext: '$(dockerfilePath)/..'
        tags: '$(tag)'
    - task: replacetokens@3
      inputs:
        rootDirectory: '$(Build.SourcesDirectory)'
        targetFiles: 'WeatherForecast.yaml'
        encoding: 'auto'
        writeBOM: false
        actionOnMissing: 'warn'
        keepToken: false
        tokenPrefix: '#{'
        tokenSuffix: '}#'
    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(Build.SourcesDirectory)'
        Contents: 'WeatherForecast.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'
    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'drop'
        publishLocation: 'pipeline'